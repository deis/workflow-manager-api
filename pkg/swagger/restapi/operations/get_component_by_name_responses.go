package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"github.com/deis/workflow-manager-api/pkg/swagger/models"
)

/*GetComponentByNameOK component releases response

swagger:response getComponentByNameOK
*/
type GetComponentByNameOK struct {

	// In: body
	Payload GetComponentByNameOKBodyBody `json:"body,omitempty"`
}

// NewGetComponentByNameOK creates GetComponentByNameOK with default headers values
func NewGetComponentByNameOK() *GetComponentByNameOK {
	return &GetComponentByNameOK{}
}

// WithPayload adds the payload to the get component by name o k response
func (o *GetComponentByNameOK) WithPayload(payload GetComponentByNameOKBodyBody) *GetComponentByNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get component by name o k response
func (o *GetComponentByNameOK) SetPayload(payload GetComponentByNameOKBodyBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetComponentByNameOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetComponentByNameDefault unexpected error

swagger:response getComponentByNameDefault
*/
type GetComponentByNameDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetComponentByNameDefault creates GetComponentByNameDefault with default headers values
func NewGetComponentByNameDefault(code int) *GetComponentByNameDefault {
	if code <= 0 {
		code = 500
	}

	return &GetComponentByNameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get component by name default response
func (o *GetComponentByNameDefault) WithStatusCode(code int) *GetComponentByNameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get component by name default response
func (o *GetComponentByNameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get component by name default response
func (o *GetComponentByNameDefault) WithPayload(payload *models.Error) *GetComponentByNameDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get component by name default response
func (o *GetComponentByNameDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetComponentByNameDefault) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
