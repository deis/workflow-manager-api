package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"github.com/deis/workflow-manager-api/pkg/swagger/models"
)

/*PublishComponentReleaseOK publish component release response

swagger:response publishComponentReleaseOK
*/
type PublishComponentReleaseOK struct {

	// In: body
	Payload *models.ComponentVersion `json:"body,omitempty"`
}

// NewPublishComponentReleaseOK creates PublishComponentReleaseOK with default headers values
func NewPublishComponentReleaseOK() *PublishComponentReleaseOK {
	return &PublishComponentReleaseOK{}
}

// WithPayload adds the payload to the publish component release o k response
func (o *PublishComponentReleaseOK) WithPayload(payload *models.ComponentVersion) *PublishComponentReleaseOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the publish component release o k response
func (o *PublishComponentReleaseOK) SetPayload(payload *models.ComponentVersion) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PublishComponentReleaseOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PublishComponentReleaseDefault unexpected error

swagger:response publishComponentReleaseDefault
*/
type PublishComponentReleaseDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewPublishComponentReleaseDefault creates PublishComponentReleaseDefault with default headers values
func NewPublishComponentReleaseDefault(code int) *PublishComponentReleaseDefault {
	if code <= 0 {
		code = 500
	}

	return &PublishComponentReleaseDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the publish component release default response
func (o *PublishComponentReleaseDefault) WithStatusCode(code int) *PublishComponentReleaseDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the publish component release default response
func (o *PublishComponentReleaseDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the publish component release default response
func (o *PublishComponentReleaseDefault) WithPayload(payload *models.Error) *PublishComponentReleaseDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the publish component release default response
func (o *PublishComponentReleaseDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PublishComponentReleaseDefault) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
