package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"github.com/deis/workflow-manager-api/pkg/swagger/models"
)

/*GetClustersCountOK clusters count response

swagger:response getClustersCountOK
*/
type GetClustersCountOK struct {

	// In: body
	Payload int64 `json:"body,omitempty"`
}

// NewGetClustersCountOK creates GetClustersCountOK with default headers values
func NewGetClustersCountOK() *GetClustersCountOK {
	return &GetClustersCountOK{}
}

// WithPayload adds the payload to the get clusters count o k response
func (o *GetClustersCountOK) WithPayload(payload int64) *GetClustersCountOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get clusters count o k response
func (o *GetClustersCountOK) SetPayload(payload int64) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClustersCountOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetClustersCountDefault unexpected error

swagger:response getClustersCountDefault
*/
type GetClustersCountDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetClustersCountDefault creates GetClustersCountDefault with default headers values
func NewGetClustersCountDefault(code int) *GetClustersCountDefault {
	if code <= 0 {
		code = 500
	}

	return &GetClustersCountDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get clusters count default response
func (o *GetClustersCountDefault) WithStatusCode(code int) *GetClustersCountDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get clusters count default response
func (o *GetClustersCountDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get clusters count default response
func (o *GetClustersCountDefault) WithPayload(payload *models.Error) *GetClustersCountDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get clusters count default response
func (o *GetClustersCountDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClustersCountDefault) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
